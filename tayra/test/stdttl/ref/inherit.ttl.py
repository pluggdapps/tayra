import imp
from   io                   import StringIO
from   pluggdapps.plugin    import Plugin, implements
import pluggdapps.utils     as h
from   tayra                import BaseTTLPlugin

_m.inherit( 'tayra:test/stdttl/base.ttl', globals() )

def body( *args, **kwargs ) :  
  _m.pushbuf()
  _m.extend( ["<!-- \nThis file is subject to the terms and conditions defined in\nfile 'LICENSE', which is part of this source code package.\n      Copyright (c) 2011 SKR Farms (P) LTD.\n-->\n\n"] )
  _m.extend( [''] )
  _m.append(_m.evalexprs( 'parent.body()', '', globals(), locals()) )
  _m.extend( ['\n\n'] )
  return _m.popbuftext()

# ---- Global Functions

def hd_styles() :  
  _m.pushbuf()
  _m.extend( [''] )
  _m.append(_m.evalexprs( 'parent.hd_styles()', '', globals(), locals()) )
  _m.extend( ['\n  '] )
  _m.pushbuf()
  _m.extend( ['<style text/css>'] )
  _m.pushbuf()
  _m.extend( ['\n    ', 'div.features {', '\n      ', 'margin : 0px 5px;', '\n    ', '}', '\n    ', 'div.features p.title {', '\n      ', 'font-family : Amaranth, arial;', '\n      ', 'font-size : large;', '\n    ', '}', '\n    ', 'div.features input[type="text"] {', '\n      ', 'margin : 10px 0px 0px 0px;', '\n      ', 'background-color : #444;', '\n      ', 'border : 1px solid gray;', '\n      ', 'width : 40%;', '\n      ', 'color : white;', '\n    ', '}', '\n    ', 'div.features fieldset {', '\n      ', 'padding : 0px 3px 5px 3px;', '\n      ', 'margin : 0px 5px;', '\n      ', 'width : 45%;', '\n      ', 'border : 1px solid gray;', '\n    ', '}', '\n    ', 'div.features fieldset legend {', '\n      ', 'font-weight : bold;', '\n      ', 'font-family : Amaranth, arial;', '\n    ', '}', '\n    ', 'div.features fieldset div.keywords {', '\n      ', 'text-align : center;', '\n    ', '}', '\n    ', 'div.search {', '\n      ', 'height : 5em;', '\n    ', '}', '\n    ', 'div.features ul {', '\n      ', 'list-style : none;', '\n      ', 'padding : 0px;', '\n      ', 'margin : 0px;', '\n    ', '}', '\n    ', 'div.features ul li {', '\n      ', 'border-left : 1px solid crimson;', '\n      ', 'margin : 5px 0px;', '\n      ', 'background-color : #444;', '\n      ', 'padding : 3px;', '\n      ', 'padding-left : 5px;', '\n      ', 'font-weight : bold;', '\n      ', 'border-top : 1px solid #444;', '\n    ', '}', '\n    ', 'div.features ul li:hover {', '\n      ', 'background-color : #999;', '\n      ', 'border-top : 1px solid #DDD;', '\n      ', 'color : black;', '\n      ', 'text-shadow : 0px 1px 1px #FFF, 0px 1px 1px black;', '\n      ', '-moz-text-shadow : 0px 1px 1px #FFF, 0px 1px 1px black;', '\n      ', '-webkit-text-shadow : 0px 1px 1px #FFF, 0px 1px 1px black;', '\n    ', '}', '\n\n'] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  return _m.popbuftext()


def hd_script() :  
  _m.pushbuf()
  _m.extend( [''] )
  _m.append(_m.evalexprs( 'parent.hd_script()', '', globals(), locals()) )
  _m.extend( ['\n  '] )
  _m.pushbuf()
  _m.extend( ['<script text/javascript>'] )
  _m.pushbuf()
  _m.extend( ['\n    ', 'var speed = 200;', '\n    ', '$(document).ready( function() {', '\n      ', '// Search', '\n      ', "$('input.search').keydown( function(e) {", '\n        ', 'var patt = new RegExp( $(\'input.search\').val(), "i" );', '\n        ', "$('div.features li').each( function(index, n) {", '\n          ', 'patt.test( $(n).text() ) ? $(n).fadeIn(speed) : $(n).fadeOut(speed);', '\n        ', '})', '\n      ', '});', '\n      ', '// Showall', '\n      ', "$('.showall').click( function(e) {", '\n        ', "$('div.features li').each( function(index, n) { $(n).fadeIn(speed); } )", '\n      ', '});', '\n      ', '// Direct search', '\n      ', "$('.dsrch').click( function(e) {", '\n        ', 'var patt = new RegExp( $(this).text(), "i" );', '\n        ', 'console.log( $(this).text() );', '\n        ', "$('div.features li').each( function(index, n) {", '\n          ', 'patt.test( $(n).text() ) ? $(n).fadeIn(speed) : $(n).fadeOut(speed);', '\n        ', '})', '\n      ', '});', '\n    ', '});', '\n\n'] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  return _m.popbuftext()


def body_centerpane() :  
  _m.pushbuf()
  _m.extend( [''] )
  _m.append(_m.evalexprs( 'parent.body_centerpane()', '', globals(), locals()) )
  _m.extend( ['\n  '] )
  _m.pushbuf()
  _m.extend( ['<div .features>'] )
  _m.pushbuf()
  _m.extend( ['\n    '] )
  _m.pushbuf()
  _m.extend( ['<p .title>'] )
  _m.pushbuf()
  _m.extend( [' Pluggdapps in a nutshell, that it is today and that it will be', '\n      ', 'tomorrow.', '\n    '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<div .search>'] )
  _m.pushbuf()
  _m.extend( ['\n      '] )
  _m.pushbuf()
  _m.extend( ['<inptext .search placeholder="Search features ...">'] )
  _m.pushbuf()
  _m.extend( ['\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<a .showall.fntxsmall.pointer>'] )
  _m.pushbuf()
  _m.extend( [' show-all', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<fieldset .floatr>'] )
  _m.pushbuf()
  _m.extend( ['\n        '] )
  _m.pushbuf()
  _m.extend( ['<legend>'] )
  _m.pushbuf()
  _m.extend( [' Common search terms', '\n        '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<div .keywords>'] )
  _m.pushbuf()
  _m.extend( ['\n          '] )
  _m.pushbuf()
  _m.extend( ['<span .dsrch.pointer.ralign>'] )
  _m.pushbuf()
  _m.extend( ['plugin', '\n          '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<span .dsrch.pointer.ralign>'] )
  _m.pushbuf()
  _m.extend( ['template', '\n          '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<span .dsrch.pointer.ralign>'] )
  _m.pushbuf()
  _m.extend( ['web|html', '\n          '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<span .dsrch.pointer.ralign>'] )
  _m.pushbuf()
  _m.extend( ['couch', '\n          '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<span .dsrch.pointer.ralign>'] )
  _m.pushbuf()
  _m.extend( ['tayra', '\n          '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<span .dsrch.pointer.ralign>'] )
  _m.pushbuf()
  _m.extend( ['program', '\n    '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<ul>'] )
  _m.pushbuf()
  _m.extend( ['\n      '] )
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Build applications on web-technologies. Build it on pluggdapps.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Linus took unix to all programmers, and apt-get took Linux to all people.', '\n        ', 'In pluggdapps, deploy a website by installing a package.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Not just websites, whether it is an application or web-application, libraries', '\n        ', 'or plugins or just couple of template files, deploy them by installing an egg', '\n        ', 'package.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['MVC (Model-View-Controller) is great. Plugin architecture is great. Do them', '\n        ', 'both in pluggdapps and get the best of both worlds.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Should client and server run on different machines ? Not with pluggdapps.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Pluggdapps run on python and javascript and web-browser and uses erlang for', '\n        ', 'database, hence, it can run on any device supporting them. Why not ?', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Library is a tool. Great libraries are stateless and re-entrant. For', '\n        ', 'pluggdapps, even applications are stateless and re-entrant.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['A framework is just a library, with callback APIs. A plugin is just a library,', '\n        ', 'with callback APIs. Hence, plugins are great way to design frameworks.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['To access a library, import them. To access plugins, query for them.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Pluggdapps is not first to do it right, it merely tracks the footsteps of', '\n        ', 'its masters - Python, Zope, Pyramid, ...', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Interface will specify attributes, methods, method-signature and its function.', '\n        ', 'A callback API is nothing but an interface, hence, plugins are nothing but', '\n        ', 'a bunch of code implementing an interface. That pretty much sums up the', '\n        ', 'plugin architecture.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Install applications and access them on the url.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Configure and customize application along with modules, interfaces and plugins', '\n        ', 'used by the application. Configure them in .ini file, configure them via web.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Applications are mounted on the url in three ways - domain, subdomain and', '\n        ', 'script. While the default is script, choose the one that fits, and', '\n        ', 'applications can be agnostic to how they are mounted.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Url-rewriting. Requests are automatically routed to the mounted', '\n        ', 'application.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Cross application access. For apps to access each other in the same run-time.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Scaffolding. From first key-stroke to first application page in less than', '\n        ', '30 seconds.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Authenticate users and authorize them with permissions. Off-the-shelf plugins', '\n        ', 'available for challenging credentials and interfacing with backend store.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Your browser has got the best documentation engine ever and wiki makes it', '\n        ', 'accessible. Use EazyText to create content for your apps.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['EazyText wiki markup. Generate HTML documents with out compromising on its', '\n        ', 'readability.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['With EazyText highlight your text as bold, italic, underline, subscript,', '\n        ', 'superscript and more.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['EazyText can hyperlink documents and images.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Text in EazyText looks natural for reading. All the same it can generate', '\n        ', 'lists, tables, definitions, blockquotes and paragraphs.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['EazyText macros, create new functions and use them in your documents.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['EazyText extensions, extend the wiki engine.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Become an expert in EazyText and create interactive documents.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['And EazyText is moving towards HTML5.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['With CSS and javascript, your browser can be way more than just a document', '\n        ', 'renderer. Use tayra templates to design your front end.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['HTML is verbose. Make it consise with Tayra.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['CSS Selector. That which pulls HTML, Javascript and CSS together.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Tayra templating language. Bunch of syntax wrapped around a bunch of', '\n        ', 'specification. Adapt the language to your needs.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Intendations are only natural to html. Why not enforce them ?', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Tayra templates. Define templates as function.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Tayra templates. Organise template functions as modules. Import them in other', '\n        ', 'templates.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Tayra templates. Templates are modules. Templates are objects. Use template', '\n        ', 'inheritance to design layouts.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Tayra templates. Specify template interface. Implement template plugins. Use', '\n        ', 'them else-where.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['If you like decorators in python, you will like it in Tayra templates.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['NoSQL is cool. CouchDB is radical. Program your database with CouchPy.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ["Don't you feel stored procedure in SQL as an after-thought ? After programming", '\n        ', '(views,...) in CouchDB, there is a high chance you might.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['CouchDB on HTTP is nothing but CRUD on ReST.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['CouchPy for CouchDB. Model. Transact. Replicate. Program. Query. Eventually', '\n        ', 'consistent with MVCC.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['\n        '] )
  _m.pushbuf()
  _m.extend( ['<em>'] )
  _m.pushbuf()
  _m.extend( ['Programmers believe that the value of their system lies in', '\n          ', 'the whole, in the building: posterity discovers it in the bricks with which', '\n          ', 'they built and which are often used again for better building.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['\n        ', 'Be it internet apps, be it desktop apps, build them on pluggdapps, whether your', '\n        ', 'applications live or whither, your plugins will go on to build better apps.', '\n      '] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.pushbuf()
  _m.extend( ['<li>'] )
  _m.pushbuf()
  _m.extend( ['Start by contributing plugins, grow as you design apps and become a network', '\n        ', 'geek.', '\n'] )
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  _m.handletag( _m.popbuftext(), _m.popbuftext(), indent=False, nl='')
  return _m.popbuftext()

# ---- Interface functions

# ---- Footer
_ttlhash = ''
_ttlfile = '/home/pratap/dev/tayra/tayra/test/stdttl/inherit.ttl' 